class SvgSpirograph extends HTMLElement{get ratio(){return window.devicePixelRatio}get R(){return this.ratio*parseFloat(this.getAttribute("fixed-circle-radius"))}set R(t){this.setAttribute("fixed-circle-radius",t)}get r(){return this.ratio*parseFloat(this.getAttribute("moving-circle-radius"))}set r(t){this.setAttribute("moving-circle-radius",t)}get p(){return this.ratio*parseFloat(this.getAttribute("moving-circle-locus-length"))}set p(t){this.setAttribute("moving-circle-locus-length",t)}get reps(){return parseFloat(this.getAttribute("repeat-count"))}set reps(t){this.setAttribute("repeat-count",t)}static get observedAttributes(){return["fixed-circle-radius","moving-circle-radius","moving-circle-locus-length","repeat-count"]}constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML='\n        <style>\n          .mm-spirograph-root {\n            display: flex;\n            height: 100%;\n            width: 100%;\n          }\n          path {\n            stroke: var(--stroke-color, #FFFFFF);\n            stroke-width: var(--stroke-width, 1px);\n            fill: var(--fill-color, none);\n            animation: var(--animation, glow infinite 10s ease-in);\n          }\n          \n          @keyframes glow {\n            0% {\n              stroke: var(--stroke-start-color, rgb(248, 7, 196));\n            }\n            50% {\n              stroke: var(--stroke-halfway-color, rgb(105, 9, 134));\n            }\n            100% {\n              stroke: var(--stroke-end-color, rgb(248, 7, 196));\n            }\n          }\n\n        </style>\n        <div class="mm-spirograph-root" data-content><svg><path></path></svg></div>\n        '}connectedCallback(){this.createSpirographFromAttributes()}createSpirographFromAttributes(){this.createSpirograph(this.R,this.r,this.p,this.reps)}attributeChangedCallback(t,e,r){this.createSpirographFromAttributes()}disconnectedCallback(){}createSpirograph(t,e,r,i){const s=this.shadowRoot.querySelector("[data-content]"),a=d3.select(s).select("svg").attr("width","100%").attr("height","100%"),o=s.clientWidth,n=s.clientHeight,c=d3.line().x(i=>{return s=i,(t+e)*Math.cos(s)+r*Math.cos((t+e)*(s/e))+o/2;var s}).y(i=>{return s=i,(t+e)*Math.sin(s)+r*Math.sin((t+e)*(s/e))+n/2;var s}).curve(d3.curveCatmullRom.alpha(.5));a.select("path").attr("d",c(d3.range(0,i,.1)))}}customElements.define("mm-svg-spirograph",SvgSpirograph);