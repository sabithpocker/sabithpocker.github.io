class MandelbrotSet extends HTMLElement{connectedCallback(){this.render(),window.addEventListener("resize",(()=>this.render()))}render(){const t=document.createElement("canvas");t.id="mandelbrotCanvas",this.innerHTML="<style>\n        :host {\n          display: grid;\n        }\n        canvas {\n          width: 100%;\n          min-height: 100%;\n        }\n        </style>",this.appendChild(t),this.resize(t);const e=t.getContext("2d"),n=t.width,o=t.height,i=e.getImageData(0,0,n,o),a=i.data;for(let t=0;t<o;t++)for(let e=0;e<n;e++){const i=4*(e-n/2)/n,r=4*(t-o/2)/o;let s=0,d=0,h=0;for(;h<100;h++){const t=s*s-d*d+i;if(d=2*s*d+r,s=t,s*s+d*d>4)break}const l=4*(t*n+e),c=this.getColor(h,100);a[l]=c[0],a[l+1]=c[1],a[l+2]=c[2],a[l+3]=255}e.putImageData(i,0,0)}resize(t){const e=window.devicePixelRatio||1,n=Math.floor(t.clientWidth*e),o=Math.floor(t.clientHeight*e);t.width===n&&t.height===o||(t.width=n,t.height=o)}getColor(t,e){const n=t/e;return[Math.floor(9*(1-n)*n*n*n*255),Math.floor(15*(1-n)*(1-n)*n*n*255),Math.floor(8.5*(1-n)*(1-n)*(1-n)*n*255)]}}customElements.define("mm-mandelbrot",MandelbrotSet);