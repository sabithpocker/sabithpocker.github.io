import fragmentShaderSource from"../shaders/fragment-shaders/fragment-shader-source.js";import gradientShader from"../shaders/fragment-shaders/gradient-shader.js";class Sierpinski extends HTMLElement{constructor(){super(),this.simpleShader=null,this.defaultVertexShaderSource=gradientShader||"\n        attribute vec2 a_position;\n        varying vec4 v_color;\n        uniform vec2 u_resolution;\n        uniform float u_time;\n       \n        void main() {\n          vec2 zeroToOne = a_position / u_resolution;\n          vec2 zeroToTwo = zeroToOne * 2.0;\n          vec2 clipSpace = zeroToTwo - 1.0;\n          gl_Position = vec4(clipSpace, 0, 1);\n          v_color = vec4(0.5 + 0.5 * sin(u_time), 0.5 + 0.5 * cos(u_time), 0.5, 1);\n        }\n        ",this.defaultFragmentShaderSource=fragmentShaderSource||"\n        precision mediump float;\n        uniform vec4 u_color;\n        varying vec4 v_color;\n        void main() {\n          gl_FragColor = v_color;\n        }\n        ",this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML="\n        <canvas data-canvas></canvas>\n        <style>\n        :host {\n          display: grid;\n        }\n        canvas {\n          width: 100%;\n          min-height: 100%;\n        }\n        </style>\n        "}connectedCallback(){const t=parseInt(this.getAttribute("depth"))||5,e=parseInt(this.getAttribute("min-side-length"))||500,r=parseInt(this.getAttribute("max-side-length"))||600,i=this.getAttribute("color")||"0.1, 0.2, 0.5";this.vertexShaderSource=this.getAttribute("vertex-shader-source")||this.defaultVertexShaderSource,this.fragmentShaderSource=this.getAttribute("fragment-shader-source")||this.defaultFragmentShaderSource,this.initializeWebGL(),this.drawSierpinski(t,e,r,i),this.render(0)}initializeWebGL(){const t=this.shadowRoot.querySelector("[data-canvas]");this.resize(t),this.gl=t.getContext("webgl2");const e=this.getProgram(this.gl,this.vertexShaderSource,this.fragmentShaderSource),r=this.gl.getAttribLocation(e,"a_position"),i=this.gl.getUniformLocation(e,"u_resolution"),a=this.gl.getUniformLocation(e,"u_color");this.timeLocation=this.gl.getUniformLocation(e,"u_time");const s=this.gl.createBuffer();this.simpleShader={program:e,positionAttributeLocation:r,resolutionUniformLocation:i,colorUniformLocation:a,positionBuffer:s},this.gl.useProgram(e),this.gl.viewport(0,0,this.gl.canvas.width,this.gl.canvas.height),this.gl.uniform2f(i,this.gl.canvas.width,this.gl.canvas.height),this.gl.uniform4f(a,.1,.2,.5,1),this.gl.enableVertexAttribArray(r),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,s)}drawSierpinski(t,e,r,i){const a=this.gl.canvas.width,s=this.gl.canvas.height,n={x:a/2,y:Math.sqrt(3)/2*s/2},o=this.getEquilateralPoints(n,s),h=this.getChildTrianglePoints(o,t),g=i.split(",").map(parseFloat);h.forEach((t=>this.drawTriangle(this.simpleShader,...t,g)))}getRandomSideLength(t,e){return Math.random()*(e-t)+t}getProgram(t,e,r){const i=this.createShader(this.gl,this.gl.VERTEX_SHADER,e),a=this.createShader(this.gl,this.gl.FRAGMENT_SHADER,r);return this.createProgram(this.gl,i,a)}createShader(t,e,r){const i=t.createShader(e);t.shaderSource(i,r),t.compileShader(i);if(t.getShaderParameter(i,t.COMPILE_STATUS))return i;console.error(t.getShaderInfoLog(i)),t.deleteShader(i)}clearCanvas(t=[0,0,0,0],e){e.clearColor(...t),e.clear(e.COLOR_BUFFER_BIT)}resize(t){const e=window.devicePixelRatio||1,r=Math.floor(t.clientWidth*e),i=Math.floor(t.clientHeight*e);t.width===r&&t.height===i||(t.width=r,t.height=i)}createProgram(t,e,r){var i=t.createProgram();if(t.attachShader(i,e),t.attachShader(i,r),t.linkProgram(i),t.getProgramParameter(i,t.LINK_STATUS))return i;console.error(t.getProgramInfoLog(i)),t.deleteProgram(i)}getEquilateralPoints(t,e){return[t.x,t.y+Math.sqrt(3)/3*e,t.x-e/2,t.y-Math.sqrt(3)/6*e,t.x+e/2,t.y-Math.sqrt(3)/6*e]}getChildTrianglePoints(t,e=0){if(0===e)return[[t[0],t[1],(t[0]+t[2])/2,(t[1]+t[3])/2,(t[0]+t[4])/2,(t[1]+t[5])/2],[t[2],t[3],(t[0]+t[2])/2,(t[1]+t[3])/2,(t[2]+t[4])/2,(t[3]+t[5])/2],[t[4],t[5],(t[0]+t[4])/2,(t[1]+t[5])/2,(t[2]+t[4])/2,(t[3]+t[5])/2]];return[...this.getChildTrianglePoints(t,e-1)].reduce(((t,e)=>[...t,...this.getChildTrianglePoints(e)]),[])}drawTriangle(t,e,r,i,a,s,n){this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array([e,r,i,a,s,n]),this.gl.STATIC_DRAW);const o=this.gl.FLOAT;this.gl.vertexAttribPointer(t.positionAttributeLocation,2,o,!1,0,0),this.renderTriangle(this.gl)}renderTriangle(t){var e=t.TRIANGLES;t.drawArrays(e,0,3)}render(t){this.clearCanvas([0,0,0,0],this.gl),this.gl.uniform1f(this.timeLocation,t/2500);const e=parseInt(this.getAttribute("depth"))||5,r=parseInt(this.getAttribute("min-side-length"))||500,i=parseInt(this.getAttribute("max-side-length"))||600,a=this.getAttribute("color")||"0.1, 0.2, 0.5";this.drawSierpinski(e,r,i,a)}}customElements.define("mm-sierpinski",Sierpinski);