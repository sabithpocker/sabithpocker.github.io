const fragmentShaderSource="#version 300 es\nprecision highp float;\n\nin vec2 v_fragCoord;\nuniform vec2 u_resolution;\nuniform float u_time;\nout vec4 outColor;\n\nvec3 palette( float t ) {\n    vec3 a = vec3(0.5, 0.5, 0.5);\n    vec3 b = vec3(0.5, 0.5, 0.5);\n    vec3 c = vec3(1.0, 1.0, 1.0);\n    vec3 d = vec3(0.263,0.416,0.557);\n\n    return a + b*cos( 6.28318*(c*t+d) );\n}\n\nvoid main() {\n    vec2 uv = (v_fragCoord * 2.0 - u_resolution.xy) / u_resolution.y;\n    float len_uv = length(uv);\n    vec3 col = palette(len_uv + u_time);\n    float sin_val = sin(len_uv * 100.0 + u_time);\n    float d = 0.001 / abs(sin_val / 100.0);\n    outColor = vec4(col * d, d);\n}";export default fragmentShaderSource;